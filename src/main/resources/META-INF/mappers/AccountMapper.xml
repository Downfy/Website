<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.downfy.persistence.repositories.AccountRepository">

    <select id="findAll" resultType="AccountDomain">
        SELECT
        ID,
        PASSWORD,
        EMAIL,
        ENABLED,
        FAILED_LOGIN_COUNT as failedLoginCount,
        LAST_FAILED_LOGIN_TIME as lastFailedLoginTime,
        LAST_HOST_ADDRESS as lastHostAddress,
        LAST_LOGIN_TIME as lastLoginTime,
        LAST_PASSWORD_CHANGE_TIME as lastPasswordChangeTime,
        EXPIRATION_DATE as expirationDate,
        CREATED
        <!--a.AUTHORITY-->
        FROM users
        <!--left outer join authorities a on a.USERNAME = u.USERNAME-->
        <!--WHERE u.ENABLED = 1-->
        ORDER BY CREATED DESC
    </select>

    <select id="findByEmail" parameterType="String" resultType="AccountDomain">
        SELECT
        ID,
        PASSWORD,
        EMAIL,
        ENABLED,
        FAILED_LOGIN_COUNT as failedLoginCount,
        LAST_FAILED_LOGIN_TIME as lastFailedLoginTime,
        LAST_HOST_ADDRESS as lastHostAddress,
        LAST_LOGIN_TIME as lastLoginTime,
        LAST_PASSWORD_CHANGE_TIME as lastPasswordChangeTime,
        EXPIRATION_DATE as expirationDate,
        CREATED
        FROM users
        WHERE EMAIL = #{email}
        LIMIT 0, 1
    </select>

    <select id="findById" parameterType="long" resultType="AccountDomain">
        SELECT
        ID,
        PASSWORD,
        EMAIL,
        ENABLED,
        FAILED_LOGIN_COUNT as failedLoginCount,
        LAST_FAILED_LOGIN_TIME as lastFailedLoginTime,
        LAST_HOST_ADDRESS as lastHostAddress,
        LAST_LOGIN_TIME as lastLoginTime,
        LAST_PASSWORD_CHANGE_TIME as lastPasswordChangeTime,
        EXPIRATION_DATE as expirationDate,
        CREATED
        FROM users
        WHERE ID = #{id}
        LIMIT 0, 1
    </select>

    <select id="count" resultType="long">
        SELECT count(*) FROM users
    </select>

    <insert id="save" parameterType="AccountDomain">
        INSERT INTO users
        (ID, PASSWORD, EMAIL, ENABLED)
        VALUES
        (#{id}, #{password}, #{email}, #{enabled})
    </insert>

    <update id="active" parameterType="long">
        UPDATE users SET ENABLED = 1 WHERE ID = #{id}
    </update>

    <update id="block" parameterType="long">
        UPDATE users SET ENABLED = 0 WHERE ID = #{id}
    </update>
</mapper>